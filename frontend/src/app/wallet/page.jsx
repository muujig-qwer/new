"use client";
import { useSession } from "next-auth/react";
import { useEffect, useState } from "react";
import axios from "axios";
import Link from "next/link";

export default function WalletPage() {
  const { data: session, status } = useSession();
  const [wallet, setWallet] = useState(0);
  const [amount, setAmount] = useState("");
  const [loading, setLoading] = useState(true);
  const [msg, setMsg] = useState("");
  const [payType, setPayType] = useState("card"); // "card" —ç—Å–≤—ç–ª "qr"
  // –ö–∞—Ä—Ç—ã–Ω –º—ç–¥—ç—ç–ª—ç–ª
  const [cardNumber, setCardNumber] = useState("");
  const [cardName, setCardName] = useState("");
  const [cardExp, setCardExp] = useState("");
  const [cardCvc, setCardCvc] = useState("");

  useEffect(() => {
    if (!session?.accessToken) return;
    const fetchWallet = async () => {
      try {
        const res = await axios.get("http://localhost:5000/api/wallet/balance", {
          headers: { Authorization: `Bearer ${session.accessToken}` },
        });
        setWallet(res.data.wallet || 0);
      } catch {
        setMsg("–•—ç—Ç—ç–≤—á–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞.");
      } finally {
        setLoading(false);
      }
    };
    fetchWallet();
  }, [session]);

  const handleAddMoney = async (e) => {
    e.preventDefault();
    setMsg("");
    if (!amount || isNaN(amount) || Number(amount) <= 0) {
      setMsg("–ó”©–≤ –¥“Ø–Ω –æ—Ä—É—É–ª–Ω–∞ —É—É.");
      return;
    }
    if (payType === "card") {
      // –ö–∞—Ä—Ç—ã–Ω –º—ç–¥—ç—ç–ª—ç–ª —à–∞–ª–≥–∞—Ö (test)
      if (!cardNumber || !cardName || !cardExp || !cardCvc) {
        setMsg("–ö–∞—Ä—Ç—ã–Ω –±“Ø—Ö –º—ç–¥—ç—ç–ª–ª–∏–π–≥ –±”©–≥–ª”©–Ω”© “Ø“Ø.");
        return;
      }
      // –≠–Ω–¥ –±–æ–¥–∏—Ç –∫–∞—Ä—Ç—ã–Ω –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏ –±–∞–π—Ö–≥“Ø–π, –∑”©–≤—Ö”©–Ω —Ç–µ—Å—Ç
      setTimeout(async () => {
        try {
          const res = await axios.post(
            "http://localhost:5000/api/wallet/add",
            { amount: Number(amount) },
            { headers: { Authorization: `Bearer ${session.accessToken}` } }
          );
          setWallet(res.data.wallet);
          setAmount("");
          setCardNumber("");
          setCardName("");
          setCardExp("");
          setCardCvc("");
          setMsg("–ö–∞—Ä—Ç–∞–∞—Ä –∞–º–∂–∏–ª—Ç—Ç–∞–π —Ü—ç–Ω—ç–≥–ª—ç–ª—ç—ç! (–¢–µ—Å—Ç)");
        } catch {
          setMsg("–ú”©–Ω–≥”© –Ω—ç–º—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞.");
        }
      }, 1000);
    } else if (payType === "qr") {
      setMsg("QR-—ç—ç—Ä —Ü—ç–Ω—ç–≥–ª—ç—Ö –±–æ–ª –¥–æ–æ—Ä—Ö QR –∫–æ–¥—ã–≥ —É–Ω—à—É—É–ª–Ω–∞ —É—É.");
      // QR —Ç”©–ª–±”©—Ä–∏–π–Ω –∞–º–∂–∏–ª—Ç—ã–≥ –≥–∞—Ä–∞–∞—Ä –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞—Ö —ç—Å–≤—ç–ª backend-—ç—ç—Å —à–∞–ª–≥–∞—Ö —Ö—ç—Ä—ç–≥—Ç—ç–π
    }
  };

  if (status === "loading" || loading) {
    return (
      <div className="flex justify-center items-center min-h-[60vh]">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  if (!session) {
    return (
      <div className="flex flex-col items-center justify-center min-h-[60vh]">
        <p className="text-lg text-gray-600 mb-4">–•—ç—Ç—ç–≤—á—ç—ç —Ö–∞—Ä–∞—Ö—ã–Ω —Ç—É–ª–¥ –Ω—ç–≤—Ç—ç—Ä–Ω—ç “Ø“Ø.</p>
        <a href="/login" className="px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition">
          –ù—ç–≤—Ç—Ä—ç—Ö
        </a>
      </div>
    );
  }

  return (
    <div className="flex flex-col md:flex-row gap-8 max-w-7xl mx-auto py-10 px-4">
      {/* Sidebar */}
      <aside className="w-full md:w-64 bg-white rounded-xl shadow p-6 space-y-4 text-sm">
        <p className="text-gray-400">–ù“Ø“Ø—Ä —Ö—É—É–¥–∞—Å ¬∑ <span className="text-black font-medium">–ú–∏–Ω–∏–π —Ö—ç—Ç—ç–≤—á</span></p>
        <nav className="flex flex-col gap-3 mt-4">
          <Link href="/profile" className="flex items-center gap-2 text-gray-700 hover:text-black">
            <span>üë§</span> –ú–∏–Ω–∏–π –º—ç–¥—ç—ç–ª—ç–ª
          </Link>
          <Link href="/wallet" className="flex items-center gap-2 text-blue-600 font-medium">
            <span>üìÅ</span> –•—ç—Ç—ç–≤—á
          </Link>
          <Link href="/orders" className="flex items-center gap-2 text-gray-700 hover:text-black">
            <span>üì¶</span> –ú–∏–Ω–∏–π –∑–∞—Ö–∏–∞–ª–≥—É—É–¥
          </Link>
          <Link href="/favorites" className="flex items-center gap-2 text-gray-700 hover:text-black">
            <span>üíö</span> –•“Ø—Å–ª–∏–π–Ω –∂–∞–≥—Å–∞–∞–ª—Ç
          </Link>
          <Link href="#" className="flex items-center gap-2 text-gray-700 hover:text-black">
            <span>üîó</span> –ò-–±–∞—Ä–∏–º—Ç —Ö–æ–ª–±–æ—Ö
          </Link>
          <Link href="#" className="flex items-center gap-2 text-gray-700 hover:text-black">
            <span>üîí</span> –ù—É—É—Ü “Ø–≥ —Å–æ–ª–∏—Ö
          </Link>
          <Link href="/company/support/faq" className="flex items-center gap-2 text-gray-700 hover:text-black">
            <span>‚ùì</span> –¢—É—Å–ª–∞–º–∂
          </Link>
          <Link href="#" className="flex items-center gap-2 text-gray-700 hover:text-black">
            <span>üö™</span> –ì–∞—Ä–∞—Ö
          </Link>
        </nav>
      </aside>

      {/* Wallet Section */}
      <section className="flex-1 bg-white rounded-xl shadow p-6">
        <div className="flex items-center justify-between mb-6">
          <h1 className="text-2xl font-bold flex items-center gap-3">
            <span className="text-3xl">üí≥</span> –ú–∏–Ω–∏–π —Ö—ç—Ç—ç–≤—á
          </h1>
        </div>
        <div className="mb-6 text-center">
          <span className="text-gray-600">“Æ–ª–¥—ç–≥–¥—ç–ª:</span>
          <span className="text-3xl font-bold text-green-600 ml-2">{wallet.toLocaleString()}‚ÇÆ</span>
        </div>
        <form onSubmit={handleAddMoney} className="flex flex-col gap-4 max-w-xs mx-auto">
          <label className="font-medium text-gray-700">–ú”©–Ω–≥”© –Ω—ç–º—ç—Ö</label>
          <input
            type="number"
            min="100"
            step="100"
            value={amount}
            onChange={e => setAmount(e.target.value)}
            className="border px-4 py-2 rounded focus:ring-2 focus:ring-blue-500"
            placeholder="–î“Ø–Ω (‚ÇÆ)"
          />
          <div className="flex gap-4 mb-2">
            <label className="flex items-center gap-2">
              <input
                type="radio"
                checked={payType === "card"}
                onChange={() => setPayType("card")}
              />
              <span>–ö–∞—Ä—Ç–∞–∞—Ä</span>
            </label>
            <label className="flex items-center gap-2">
              <input
                type="radio"
                checked={payType === "qr"}
                onChange={() => setPayType("qr")}
              />
              <span>QR-—ç—ç—Ä</span>
            </label>
          </div>
          {payType === "card" && (
            <div className="space-y-2">
              <input
                type="text"
                className="w-full border border-gray-300 rounded-lg px-4 py-2"
                placeholder="–ö–∞—Ä—Ç—ã–Ω –¥—É–≥–∞–∞—Ä"
                value={cardNumber}
                onChange={e => setCardNumber(e.target.value)}
                maxLength={19}
                required
              />
              <input
                type="text"
                className="w-full border border-gray-300 rounded-lg px-4 py-2"
                placeholder="–ö–∞—Ä—Ç —ç–∑—ç–º—à–∏–≥—á–∏–π–Ω –Ω—ç—Ä"
                value={cardName}
                onChange={e => setCardName(e.target.value)}
                required
              />
              <div className="flex gap-2">
                <input
                  type="text"
                  className="w-1/2 border border-gray-300 rounded-lg px-4 py-2"
                  placeholder="MM/YY"
                  value={cardExp}
                  onChange={e => setCardExp(e.target.value)}
                  required
                />
                <input
                  type="text"
                  className="w-1/2 border border-gray-300 rounded-lg px-4 py-2"
                  placeholder="CVC"
                  value={cardCvc}
                  onChange={e => setCardCvc(e.target.value)}
                  required
                />
              </div>
              <div className="text-xs text-gray-400">–≠–Ω—ç –±–æ–ª –∑”©–≤—Ö”©–Ω —Ç–µ—Å—Ç UI, –±–æ–¥–∏—Ç —Ç”©–ª–±”©—Ä —Ö–∏–π–≥–¥—ç—Ö–≥“Ø–π.</div>
            </div>
          )}
          {payType === "qr" && (
            <div className="flex flex-col items-center my-4">
              <p className="mb-2 text-gray-700 font-semibold">QR –∫–æ–¥—ã–≥ —É–Ω—à—É—É–ª–∂ —Ü—ç–Ω—ç–≥–ª—ç–Ω—ç “Ø“Ø</p>
              <img
                src="/qr-demo.png"
                alt="QR —Ç”©–ª–±”©—Ä"
                className="w-48 h-48 object-contain border rounded-lg shadow"
              />
              <p className="mt-2 text-gray-500 text-sm">–¢”©–ª–±”©—Ä: <b>{amount ? Number(amount).toLocaleString() : 0}‚ÇÆ</b></p>
              <div className="text-xs text-gray-400 mt-2">QR-—ç—ç—Ä —Ü—ç–Ω—ç–≥–ª—ç–ª—Ç –≥–∞—Ä–∞–∞—Ä –±–∞—Ç–∞–ª–≥–∞–∞–∂–∏—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π.</div>
            </div>
          )}
          <button
            type="submit"
            className="bg-blue-600 text-white rounded py-2 hover:bg-blue-700 transition"
          >
            –ù—ç–º—ç—Ö
          </button>
          {msg && <p className="text-center text-red-500 text-sm mt-2">{msg}</p>}
        </form>
      </section>
    </div>
  );
}